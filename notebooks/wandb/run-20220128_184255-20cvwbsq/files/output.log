Overriding model.yaml nc=80 with nc=3
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     21576  models.yolo.Detect                      [3, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
C:\Users\rb01243\Anaconda3\lib\site-packages\torch\functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ..\aten\src\ATen\native\TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Model Summary: 270 layers, 7027720 parameters, 7027720 gradients, 15.9 GFLOPs
Transferred 344/350 items from yolov5s.pt
Scaled weight_decay = 0.00046875
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight, 60 weight (no decay), 60 bias
[34m[1mtrain: [39m[22mScanning '..\data\datasets\All_Volunteers_Crowdsourced\labels\train.cache' images and labels... 2103 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2103/2103 [00:00<?, ?it/s]
[34m[1mval: [39m[22mScanning '..\data\datasets\All_Volunteers_IID\labels\val' images and labels...860 found, 0 missing, 0 empty, 2 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 860/860 [00:04<00:00, 203.57it/s]
[34m[1mval: [39m[22mWARNING: Ignoring corrupted image and/or label ..\data\datasets\All_Volunteers_IID\images\val\Unknown-X-20191113-153036-XKNMQ7OPXKU-3.1f089314ef9273e4647b.JPG: non-normalized or out of bounds coordinate labels
[34m[1mval: [39m[22mWARNING: Ignoring corrupted image and/or label ..\data\datasets\All_Volunteers_IID\images\val\Unknown-X-20191113-153036-XKNMQ7OPXKU-3.9c62fc6bf51ff6f1eafe.JPG: non-normalized or out of bounds coordinate labels
[34m[1mval: [39m[22mWARNING: Cache directory ..\data\datasets\All_Volunteers_IID\labels is not writeable: [WinError 183] Cannot create a file when that file already exists: '..\\data\\datasets\\All_Volunteers_IID\\labels\\val.cache.npy' -> '..\\data\\datasets\\All_Volunteers_IID\\labels\\val.cache'
Plotting labels...
[34m[1mautoanchor: [39m[22mAnalyzing anchors... anchors/target = 5.23, Best Possible Recall (BPR) = 0.9990
Image sizes 640 train, 640 val
Using 8 dataloader workers
Logging results to [1mruns\train\Expset2_all_cyolo33
Starting training for 15 epochs...
     Epoch   gpu_mem       box       obj       cls    labels  img_size
YOLO+BCC
  0%|          | 0/106 [00:00<?, ?it/s]
Minimum probs (c1, c2, bkgd): [5e-06, 2e-06, 4e-06, 0.737305]
Maximum probs (c1, c2, bkgd): [0.161849, 0.074818, 0.090162, 1.0]
inds:  (tensor([ 0,  0,  0,  ..., 19, 19, 19]), tensor([    0,     1,     2,  ..., 25197, 25198, 25199]))
X:  tensor([[[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        ...,
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]]])
X size:  torch.Size([20, 25200, 505])
k:  0
ElogPi_volunteer:  tensor([[[-1.38528, -1.38528, -1.38528,  ..., -1.38528, -1.38528, -1.38528],
         [-1.53874, -1.53874, -1.53874,  ..., -1.53874, -1.53874, -1.53874],
         [-1.53874, -1.53874, -1.53874,  ..., -1.53874, -1.53874, -1.53874]],
        [[-1.53874, -1.53874, -1.53874,  ..., -1.53874, -1.53874, -1.53874],
         [-1.38528, -1.38528, -1.38528,  ..., -1.38528, -1.38528, -1.38528],
         [-1.53874, -1.53874, -1.53874,  ..., -1.53874, -1.53874, -1.53874]],
        [[-1.53874, -1.53874, -1.53874,  ..., -1.53874, -1.53874, -1.53874],
         [-1.53874, -1.53874, -1.53874,  ..., -1.53874, -1.53874, -1.53874],
         [-1.38528, -1.38528, -1.38528,  ..., -1.38528, -1.38528, -1.38528]]], device='cuda:0', dtype=torch.float64)
ElogPi_volunteer size:  torch.Size([3, 3, 505])
<class 'torch.Tensor'>
base_lib:  tensor([2, 2, 2,  ..., 2, 2, 2])
base_lib size:  torch.Size([504000])
<class 'torch.Tensor'>
ElogPi_volunteer + base_lib:  tensor([[-1.53874, -1.53874, -1.53874,  ..., -1.53874, -1.53874, -1.53874],
        [-1.53874, -1.53874, -1.53874,  ..., -1.53874, -1.53874, -1.53874],
        [-1.38528, -1.38528, -1.38528,  ..., -1.38528, -1.38528, -1.38528]], device='cuda:0', dtype=torch.float64)
ElogPi_volunteer + base_lib Size:  torch.Size([3, 504000])
<class 'torch.Tensor'>
rho:  tensor([[[-8.27240e+00, -8.20519e+00, -1.06395e+01, -4.88401e-04],
         [-8.21988e+00, -7.99050e+00, -9.69535e+00, -4.88401e-04],
         [-7.77943e+00, -7.84409e+00, -9.04005e+00, -9.77040e-04],
         ...,
         [-4.88937e+00, -4.69130e+00, -4.52018e+00, -2.77245e-02],
         [-4.81247e+00, -4.49259e+00, -4.46777e+00, -3.12448e-02],
         [-4.60463e+00, -4.62333e+00, -4.52407e+00, -3.12448e-02]],
        [[-8.46947e+00, -8.38862e+00, -1.08525e+01, -4.88401e-04],
         [-8.37000e+00, -8.13031e+00, -9.88800e+00, -4.88401e-04],
         [-7.92162e+00, -7.97274e+00, -9.18004e+00, -9.77040e-04],
         ...,
         [-5.05094e+00, -4.99410e+00, -4.69817e+00, -2.27170e-02],
         [-4.90017e+00, -4.62383e+00, -4.49346e+00, -2.87291e-02],
         [-4.65293e+00, -4.72063e+00, -4.56341e+00, -2.92317e-02]],
        [[-8.17187e+00, -8.06362e+00, -1.07401e+01, -4.88401e-04],
         [-8.14228e+00, -7.80292e+00, -9.79381e+00, -9.77040e-04],
         [-7.51407e+00, -7.54181e+00, -8.94332e+00, -9.77040e-04],
         ...,
         [-4.88640e+00, -4.92470e+00, -4.58280e+00, -2.52177e-02],
         [-4.76757e+00, -4.51760e+00, -4.37674e+00, -3.27573e-02],
         [-4.52925e+00, -4.68749e+00, -4.40403e+00, -3.27573e-02]],
        ...,
        [[-8.23565e+00, -8.21974e+00, -1.11735e+01, -4.88401e-04],
         [-8.10449e+00, -7.97706e+00, -1.02734e+01, -4.88401e-04],
         [-7.68039e+00, -7.76641e+00, -9.52618e+00, -9.77040e-04],
         ...,
         [-4.81619e+00, -4.70850e+00, -4.59013e+00, -2.77245e-02],
         [-4.75518e+00, -4.51869e+00, -4.53163e+00, -3.07411e-02],
         [-4.51531e+00, -4.69047e+00, -4.57972e+00, -3.07411e-02]],
        [[-8.57552e+00, -8.53480e+00, -1.11310e+01, -4.88401e-04],
         [-8.47589e+00, -8.26522e+00, -1.01834e+01, -4.88401e-04],
         [-7.85960e+00, -7.88844e+00, -9.29916e+00, -9.77040e-04],
         ...,
         [-4.57869e+00, -4.54537e+00, -4.38680e+00, -3.37669e-02],
         [-4.60387e+00, -4.43352e+00, -4.42632e+00, -3.42720e-02],
         [-4.48855e+00, -4.66517e+00, -4.54159e+00, -3.17487e-02]],
        [[-8.37773e+00, -8.47462e+00, -1.06718e+01, -4.88401e-04],
         [-8.30776e+00, -8.24768e+00, -9.76292e+00, -4.88401e-04],
         [-7.88741e+00, -8.13077e+00, -9.17451e+00, -9.77040e-04],
         ...,
         [-4.81024e+00, -4.99188e+00, -4.71879e+00, -2.42167e-02],
         [-4.66542e+00, -4.71385e+00, -4.56372e+00, -2.92317e-02],
         [-4.45197e+00, -4.84246e+00, -4.60540e+00, -2.97346e-02]]], device='cuda:0')
simple_transpose:  tensor([[-1.53874, -1.53874, -1.38528],
        [-1.53874, -1.53874, -1.38528],
        [-1.53874, -1.53874, -1.38528],
        ...,
        [-1.53874, -1.53874, -1.38528],
        [-1.53874, -1.53874, -1.38528],

  0%|          | 0/106 [00:09<?, ?it/s]
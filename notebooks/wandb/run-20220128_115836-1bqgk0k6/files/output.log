Overriding model.yaml nc=80 with nc=2
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     18879  models.yolo.Detect                      [2, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
C:\Users\rb01243\Anaconda3\lib\site-packages\torch\functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ..\aten\src\ATen\native\TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Model Summary: 270 layers, 7025023 parameters, 7025023 gradients, 15.9 GFLOPs
Transferred 344/350 items from yolov5s.pt
Scaled weight_decay = 0.00046875
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight, 60 weight (no decay), 60 bias
[34m[1mtrain: [39m[22mScanning '..\data\datasets\bcc-tvt\labels\train.cache' images and labels... 70 found, 0 missing, 3 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 70/70 [00:00<?, ?it/s]
[34m[1mval: [39m[22mScanning '..\data\datasets\iid-tvt\labels\val.cache' images and labels... 67 found, 13 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 80/80 [00:00<?, ?it/s]
Plotting labels...
[34m[1mautoanchor: [39m[22mAnalyzing anchors... anchors/target = 6.03, Best Possible Recall (BPR) = 1.0000
Image sizes 640 train, 640 val
Using 8 dataloader workers
Logging results to [1mruns\train\test209943
Starting training for 80 epochs...
     Epoch   gpu_mem       box       obj       cls    labels  img_size
YOLO+BCC
  0%|          | 0/4 [00:00<?, ?it/s]
Minimum probs (c1, c2, bkgd): [1e-05, 1.4e-05, 0.890137]
Maximum probs (c1, c2, bkgd): [0.075563, 0.064747, 1.0]
ElogPi_volunteer:  tensor([[[-1.38528, -1.38528, -1.38528, -1.38528],
         [-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.53874, -1.53874, -1.53874, -1.53874]],
        [[-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.38528, -1.38528, -1.38528, -1.38528],
         [-1.53874, -1.53874, -1.53874, -1.53874]],
        [[-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.38528, -1.38528, -1.38528, -1.38528]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.38528, -1.38528, -1.38528, -1.38528],
         [-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.53874, -1.53874, -1.53874, -1.53874]],
        [[-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.38528, -1.38528, -1.38528, -1.38528],
         [-1.53874, -1.53874, -1.53874, -1.53874]],
        [[-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.38528, -1.38528, -1.38528, -1.38528]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.38528, -1.38528, -1.38528, -1.38528],
         [-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.53874, -1.53874, -1.53874, -1.53874]],
        [[-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.38528, -1.38528, -1.38528, -1.38528],
         [-1.53874, -1.53874, -1.53874, -1.53874]],
        [[-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.38528, -1.38528, -1.38528, -1.38528]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.38528, -1.38528, -1.38528, -1.38528],
         [-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.53874, -1.53874, -1.53874, -1.53874]],
        [[-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.38528, -1.38528, -1.38528, -1.38528],
         [-1.53874, -1.53874, -1.53874, -1.53874]],
        [[-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.53874, -1.53874, -1.53874, -1.53874],
         [-1.38528, -1.38528, -1.38528, -1.38528]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
Minimum probs (c1, c2, bkgd): [1.5e-05, 1.1e-05, 0.841797]
Maximum probs (c1, c2, bkgd): [0.109224, 0.092917, 1.0]
ElogPi_volunteer:  tensor([[[-4.96621e+00, -4.97111e+00, -5.07819e+00, -4.84500e+00],
         [-6.38744e+00, -6.55175e+00, -6.81972e+00, -6.81163e+00],
         [-1.03554e-02, -1.00530e-02, -8.98188e-03, -1.06482e-02]],
        [[-5.28455e+00, -5.22973e+00, -5.36342e+00, -5.16589e+00],
         [-6.23197e+00, -6.39136e+00, -6.60129e+00, -6.61748e+00],
         [-8.79665e-03, -8.78432e-03, -7.77061e-03, -8.78412e-03]],
        [[-7.07175e+00, -6.95291e+00, -7.20530e+00, -6.89970e+00],
         [-8.63249e+00, -8.98590e+00, -1.02196e+01, -1.02192e+01],
         [-1.02948e-03, -1.08359e-03, -7.81375e-04, -1.04708e-03]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-4.96621e+00, -4.97111e+00, -5.07819e+00, -4.84500e+00],
         [-6.38744e+00, -6.55175e+00, -6.81972e+00, -6.81163e+00],
         [-1.03554e-02, -1.00530e-02, -8.98188e-03, -1.06482e-02]],
        [[-5.28455e+00, -5.22973e+00, -5.36342e+00, -5.16589e+00],
         [-6.23197e+00, -6.39136e+00, -6.60129e+00, -6.61748e+00],
         [-8.79665e-03, -8.78432e-03, -7.77061e-03, -8.78412e-03]],
        [[-7.07175e+00, -6.95291e+00, -7.20530e+00, -6.89970e+00],
         [-8.63249e+00, -8.98590e+00, -1.02196e+01, -1.02192e+01],
         [-1.02948e-03, -1.08359e-03, -7.81375e-04, -1.04708e-03]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-4.96621e+00, -4.97111e+00, -5.07819e+00, -4.84500e+00],
         [-6.38744e+00, -6.55175e+00, -6.81972e+00, -6.81163e+00],
         [-1.03554e-02, -1.00530e-02, -8.98188e-03, -1.06482e-02]],
        [[-5.28455e+00, -5.22973e+00, -5.36342e+00, -5.16589e+00],
         [-6.23197e+00, -6.39136e+00, -6.60129e+00, -6.61748e+00],
         [-8.79665e-03, -8.78432e-03, -7.77061e-03, -8.78412e-03]],
        [[-7.07175e+00, -6.95291e+00, -7.20530e+00, -6.89970e+00],
         [-8.63249e+00, -8.98590e+00, -1.02196e+01, -1.02192e+01],
         [-1.02948e-03, -1.08359e-03, -7.81375e-04, -1.04708e-03]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-4.96621e+00, -4.97111e+00, -5.07819e+00, -4.84500e+00],
         [-6.38744e+00, -6.55175e+00, -6.81972e+00, -6.81163e+00],
         [-1.03554e-02, -1.00530e-02, -8.98188e-03, -1.06482e-02]],
        [[-5.28455e+00, -5.22973e+00, -5.36342e+00, -5.16589e+00],
         [-6.23197e+00, -6.39136e+00, -6.60129e+00, -6.61748e+00],
         [-8.79665e-03, -8.78432e-03, -7.77061e-03, -8.78412e-03]],
        [[-7.07175e+00, -6.95291e+00, -7.20530e+00, -6.89970e+00],
         [-8.63249e+00, -8.98590e+00, -1.02196e+01, -1.02192e+01],
         [-1.02948e-03, -1.08359e-03, -7.81375e-04, -1.04708e-03]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>

      0/79     13.9G   0.09173   0.04893   0.02044       114       640: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 4/4 [00:07<00:00,  1.97s/it]
               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95:   0%|          | 0/2 [00:00<?, ?it/s]
Minimum probs (c1, c2, bkgd): [1.2e-05, 5e-06, 0.867188]
Maximum probs (c1, c2, bkgd): [0.106195, 0.060208, 1.0]
ElogPi_volunteer:  tensor([[[-2.01466e+00, -2.05394e+00, -2.13806e+00, -1.86537e+00],
         [-4.66455e+00, -6.04086e+00, -5.23149e+00, -4.98025e+00],
         [-1.55053e-01, -1.40918e-01, -1.32466e-01, -1.77395e-01]],
        [[-2.69570e+00, -2.63329e+00, -2.83072e+00, -2.51829e+00],
         [-4.64994e+00, -5.25985e+00, -4.53009e+00, -4.35438e+00],
         [-8.12340e-02, -8.12097e-02, -7.33407e-02, -9.91732e-02]],
        [[-7.29406e+00, -6.58404e+00, -7.29367e+00, -6.91124e+00],
         [-8.30096e+00, -1.06880e+01, -1.07131e+01, -9.89841e+00],
         [-9.30263e-04, -1.40804e-03, -7.04311e-04, -1.04932e-03]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-2.01466e+00, -2.05394e+00, -2.13806e+00, -1.86537e+00],
         [-4.66455e+00, -6.04086e+00, -5.23149e+00, -4.98025e+00],
         [-1.55053e-01, -1.40918e-01, -1.32466e-01, -1.77395e-01]],
        [[-2.69570e+00, -2.63329e+00, -2.83072e+00, -2.51829e+00],
         [-4.64994e+00, -5.25985e+00, -4.53009e+00, -4.35438e+00],
         [-8.12340e-02, -8.12097e-02, -7.33407e-02, -9.91732e-02]],
        [[-7.29406e+00, -6.58404e+00, -7.29367e+00, -6.91124e+00],
         [-8.30096e+00, -1.06880e+01, -1.07131e+01, -9.89841e+00],
         [-9.30263e-04, -1.40804e-03, -7.04311e-04, -1.04932e-03]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-2.01466e+00, -2.05394e+00, -2.13806e+00, -1.86537e+00],
         [-4.66455e+00, -6.04086e+00, -5.23149e+00, -4.98025e+00],
         [-1.55053e-01, -1.40918e-01, -1.32466e-01, -1.77395e-01]],
        [[-2.69570e+00, -2.63329e+00, -2.83072e+00, -2.51829e+00],
         [-4.64994e+00, -5.25985e+00, -4.53009e+00, -4.35438e+00],
         [-8.12340e-02, -8.12097e-02, -7.33407e-02, -9.91732e-02]],
        [[-7.29406e+00, -6.58404e+00, -7.29367e+00, -6.91124e+00],
         [-8.30096e+00, -1.06880e+01, -1.07131e+01, -9.89841e+00],
         [-9.30263e-04, -1.40804e-03, -7.04311e-04, -1.04932e-03]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-2.01466e+00, -2.05394e+00, -2.13806e+00, -1.86537e+00],
         [-4.66455e+00, -6.04086e+00, -5.23149e+00, -4.98025e+00],
         [-1.55053e-01, -1.40918e-01, -1.32466e-01, -1.77395e-01]],
        [[-2.69570e+00, -2.63329e+00, -2.83072e+00, -2.51829e+00],
         [-4.64994e+00, -5.25985e+00, -4.53009e+00, -4.35438e+00],
         [-8.12340e-02, -8.12097e-02, -7.33407e-02, -9.91732e-02]],
        [[-7.29406e+00, -6.58404e+00, -7.29367e+00, -6.91124e+00],
         [-8.30096e+00, -1.06880e+01, -1.07131e+01, -9.89841e+00],
         [-9.30263e-04, -1.40804e-03, -7.04311e-04, -1.04932e-03]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
Minimum probs (c1, c2, bkgd): [2.1e-05, 1.7e-05, 0.851074]
Maximum probs (c1, c2, bkgd): [0.06187, 0.102043, 1.0]
ElogPi_volunteer:  tensor([[[-1.49619e+00, -1.46899e+00, -1.54340e+00, -1.39116e+00],
         [-4.02999e+00, -5.30823e+00, -4.83747e+00, -4.14163e+00],
         [-2.77967e-01, -2.69219e-01, -2.51672e-01, -3.08706e-01]],
        [[-2.70689e+00, -2.10115e+00, -2.78356e+00, -2.46219e+00],
         [-3.48032e+00, -4.64792e+00, -3.75104e+00, -3.09943e+00],
         [-1.03800e-01, -1.42654e-01, -9.03217e-02, -1.40845e-01]],
        [[-8.34924e+00, -6.77653e+00, -8.53511e+00, -7.97100e+00],
         [-8.55006e+00, -1.14829e+01, -9.91771e+00, -9.05485e+00],
         [-4.32194e-04, -1.15317e-03, -2.47761e-04, -4.64253e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.49619e+00, -1.46899e+00, -1.54340e+00, -1.39116e+00],
         [-4.02999e+00, -5.30823e+00, -4.83747e+00, -4.14163e+00],
         [-2.77967e-01, -2.69219e-01, -2.51672e-01, -3.08706e-01]],
        [[-2.70689e+00, -2.10115e+00, -2.78356e+00, -2.46219e+00],
         [-3.48032e+00, -4.64792e+00, -3.75104e+00, -3.09943e+00],
         [-1.03800e-01, -1.42654e-01, -9.03217e-02, -1.40845e-01]],
        [[-8.34924e+00, -6.77653e+00, -8.53511e+00, -7.97100e+00],
         [-8.55006e+00, -1.14829e+01, -9.91771e+00, -9.05485e+00],
         [-4.32194e-04, -1.15317e-03, -2.47761e-04, -4.64253e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.49619e+00, -1.46899e+00, -1.54340e+00, -1.39116e+00],
         [-4.02999e+00, -5.30823e+00, -4.83747e+00, -4.14163e+00],
         [-2.77967e-01, -2.69219e-01, -2.51672e-01, -3.08706e-01]],
        [[-2.70689e+00, -2.10115e+00, -2.78356e+00, -2.46219e+00],
         [-3.48032e+00, -4.64792e+00, -3.75104e+00, -3.09943e+00],
         [-1.03800e-01, -1.42654e-01, -9.03217e-02, -1.40845e-01]],
        [[-8.34924e+00, -6.77653e+00, -8.53511e+00, -7.97100e+00],
         [-8.55006e+00, -1.14829e+01, -9.91771e+00, -9.05485e+00],
         [-4.32194e-04, -1.15317e-03, -2.47761e-04, -4.64253e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.49619e+00, -1.46899e+00, -1.54340e+00, -1.39116e+00],
         [-4.02999e+00, -5.30823e+00, -4.83747e+00, -4.14163e+00],
         [-2.77967e-01, -2.69219e-01, -2.51672e-01, -3.08706e-01]],
        [[-2.70689e+00, -2.10115e+00, -2.78356e+00, -2.46219e+00],
         [-3.48032e+00, -4.64792e+00, -3.75104e+00, -3.09943e+00],
         [-1.03800e-01, -1.42654e-01, -9.03217e-02, -1.40845e-01]],
        [[-8.34924e+00, -6.77653e+00, -8.53511e+00, -7.97100e+00],
         [-8.55006e+00, -1.14829e+01, -9.91771e+00, -9.05485e+00],
         [-4.32194e-04, -1.15317e-03, -2.47761e-04, -4.64253e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:02<00:00,  1.24s/it]
               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95:   0%|          | 0/4 [00:00<?, ?it/s]
                 all         70        961    0.00292     0.0163    0.00136   0.000268
Minimum probs (c1, c2, bkgd): [6e-06, 9e-06, 0.911621]
Maximum probs (c1, c2, bkgd): [0.060649, 0.057642, 1.0]
ElogPi_volunteer:  tensor([[[-1.27370e+00, -1.42516e+00, -1.09167e+00, -1.29190e+00],
         [-4.26525e+00, -5.54847e+00, -4.37117e+00, -4.49839e+00],
         [-3.51305e-01, -2.83302e-01, -4.31828e-01, -3.40041e-01]],
        [[-3.30466e+00, -2.15951e+00, -2.90224e+00, -2.99838e+00],
         [-2.80237e+00, -3.96054e+00, -2.44934e+00, -2.59168e+00],
         [-1.04937e-01, -1.46959e-01, -1.54895e-01, -1.35826e-01]],
        [[-9.00082e+00, -7.27274e+00, -8.85977e+00, -8.84424e+00],
         [-9.30678e+00, -1.29428e+01, -9.95065e+00, -9.56031e+00],
         [-2.18108e-04, -7.00594e-04, -1.93667e-04, -2.18673e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.27370e+00, -1.42516e+00, -1.09167e+00, -1.29190e+00],
         [-4.26525e+00, -5.54847e+00, -4.37117e+00, -4.49839e+00],
         [-3.51305e-01, -2.83302e-01, -4.31828e-01, -3.40041e-01]],
        [[-3.30466e+00, -2.15951e+00, -2.90224e+00, -2.99838e+00],
         [-2.80237e+00, -3.96054e+00, -2.44934e+00, -2.59168e+00],
         [-1.04937e-01, -1.46959e-01, -1.54895e-01, -1.35826e-01]],
        [[-9.00082e+00, -7.27274e+00, -8.85977e+00, -8.84424e+00],
         [-9.30678e+00, -1.29428e+01, -9.95065e+00, -9.56031e+00],
         [-2.18108e-04, -7.00594e-04, -1.93667e-04, -2.18673e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.27370e+00, -1.42516e+00, -1.09167e+00, -1.29190e+00],
         [-4.26525e+00, -5.54847e+00, -4.37117e+00, -4.49839e+00],
         [-3.51305e-01, -2.83302e-01, -4.31828e-01, -3.40041e-01]],
        [[-3.30466e+00, -2.15951e+00, -2.90224e+00, -2.99838e+00],
         [-2.80237e+00, -3.96054e+00, -2.44934e+00, -2.59168e+00],
         [-1.04937e-01, -1.46959e-01, -1.54895e-01, -1.35826e-01]],
        [[-9.00082e+00, -7.27274e+00, -8.85977e+00, -8.84424e+00],
         [-9.30678e+00, -1.29428e+01, -9.95065e+00, -9.56031e+00],
         [-2.18108e-04, -7.00594e-04, -1.93667e-04, -2.18673e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.27370e+00, -1.42516e+00, -1.09167e+00, -1.29190e+00],
         [-4.26525e+00, -5.54847e+00, -4.37117e+00, -4.49839e+00],
         [-3.51305e-01, -2.83302e-01, -4.31828e-01, -3.40041e-01]],
        [[-3.30466e+00, -2.15951e+00, -2.90224e+00, -2.99838e+00],
         [-2.80237e+00, -3.96054e+00, -2.44934e+00, -2.59168e+00],
         [-1.04937e-01, -1.46959e-01, -1.54895e-01, -1.35826e-01]],
        [[-9.00082e+00, -7.27274e+00, -8.85977e+00, -8.84424e+00],
         [-9.30678e+00, -1.29428e+01, -9.95065e+00, -9.56031e+00],
         [-2.18108e-04, -7.00594e-04, -1.93667e-04, -2.18673e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 4/4 [00:01<00:00,  2.54it/s]
     Epoch   gpu_mem       box       obj       cls    labels  img_size
YOLO+BCC
      1/79     15.6G      0.12   0.08095   0.02777       114       640: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 4/4 [00:01<00:00,  2.38it/s]
               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95:  50%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆ     | 1/2 [00:00<00:00,  1.74it/s]
Minimum probs (c1, c2, bkgd): [8e-06, 9e-06, 0.84375]
Maximum probs (c1, c2, bkgd): [0.107374, 0.093944, 1.0]
ElogPi_volunteer:  tensor([[[-1.04466e+00, -1.47872e+00, -1.15320e+00, -9.10548e-01],
         [-4.45707e+00, -4.55067e+00, -6.37250e+00, -6.57317e+00],
         [-4.53314e-01, -2.73862e-01, -3.83290e-01, -5.18768e-01]],
        [[-3.25977e+00, -2.43539e+00, -3.32072e+00, -2.88062e+00],
         [-2.94136e+00, -2.82185e+00, -4.20134e+00, -4.28292e+00],
         [-9.70023e-02, -1.60539e-01, -5.37744e-02, -7.38130e-02]],
        [[-8.78565e+00, -7.79606e+00, -9.06356e+00, -8.55318e+00],
         [-9.46621e+00, -1.11083e+01, -1.13107e+01, -1.11290e+01],
         [-2.32351e-04, -4.28409e-04, -1.30035e-04, -2.09611e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.04466e+00, -1.47872e+00, -1.15320e+00, -9.10548e-01],
         [-4.45707e+00, -4.55067e+00, -6.37250e+00, -6.57317e+00],
         [-4.53314e-01, -2.73862e-01, -3.83290e-01, -5.18768e-01]],
        [[-3.25977e+00, -2.43539e+00, -3.32072e+00, -2.88062e+00],
         [-2.94136e+00, -2.82185e+00, -4.20134e+00, -4.28292e+00],
         [-9.70023e-02, -1.60539e-01, -5.37744e-02, -7.38130e-02]],
        [[-8.78565e+00, -7.79606e+00, -9.06356e+00, -8.55318e+00],
         [-9.46621e+00, -1.11083e+01, -1.13107e+01, -1.11290e+01],
         [-2.32351e-04, -4.28409e-04, -1.30035e-04, -2.09611e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.04466e+00, -1.47872e+00, -1.15320e+00, -9.10548e-01],
         [-4.45707e+00, -4.55067e+00, -6.37250e+00, -6.57317e+00],
         [-4.53314e-01, -2.73862e-01, -3.83290e-01, -5.18768e-01]],
        [[-3.25977e+00, -2.43539e+00, -3.32072e+00, -2.88062e+00],
         [-2.94136e+00, -2.82185e+00, -4.20134e+00, -4.28292e+00],
         [-9.70023e-02, -1.60539e-01, -5.37744e-02, -7.38130e-02]],
        [[-8.78565e+00, -7.79606e+00, -9.06356e+00, -8.55318e+00],
         [-9.46621e+00, -1.11083e+01, -1.13107e+01, -1.11290e+01],
         [-2.32351e-04, -4.28409e-04, -1.30035e-04, -2.09611e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-1.04466e+00, -1.47872e+00, -1.15320e+00, -9.10548e-01],
         [-4.45707e+00, -4.55067e+00, -6.37250e+00, -6.57317e+00],
         [-4.53314e-01, -2.73862e-01, -3.83290e-01, -5.18768e-01]],
        [[-3.25977e+00, -2.43539e+00, -3.32072e+00, -2.88062e+00],
         [-2.94136e+00, -2.82185e+00, -4.20134e+00, -4.28292e+00],
         [-9.70023e-02, -1.60539e-01, -5.37744e-02, -7.38130e-02]],
        [[-8.78565e+00, -7.79606e+00, -9.06356e+00, -8.55318e+00],
         [-9.46621e+00, -1.11083e+01, -1.13107e+01, -1.11290e+01],
         [-2.32351e-04, -4.28409e-04, -1.30035e-04, -2.09611e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
Minimum probs (c1, c2, bkgd): [1.1e-05, 4e-06, 0.836426]
Maximum probs (c1, c2, bkgd): [0.130843, 0.065334, 1.0]
ElogPi_volunteer:  tensor([[[-9.00039e-01, -1.06915e+00, -9.96749e-01, -6.84438e-01],
         [-4.36852e+00, -6.75413e+00, -7.23676e+00, -6.80842e+00],
         [-5.44874e-01, -4.23587e-01, -4.63023e-01, -7.05857e-01]],
        [[-3.67777e+00, -1.84364e+00, -3.37029e+00, -2.92029e+00],
         [-2.65358e+00, -4.14801e+00, -3.75090e+00, -3.39416e+00],
         [-1.01743e-01, -1.92489e-01, -6.07441e-02, -9.27161e-02]],
        [[-8.82044e+00, -7.20378e+00, -8.72001e+00, -8.24388e+00],
         [-8.95604e+00, -1.18913e+01, -1.13819e+01, -1.05026e+01],
         [-2.78669e-04, -7.52869e-04, -1.76678e-04, -2.92356e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-9.00039e-01, -1.06915e+00, -9.96749e-01, -6.84438e-01],
         [-4.36852e+00, -6.75413e+00, -7.23676e+00, -6.80842e+00],
         [-5.44874e-01, -4.23587e-01, -4.63023e-01, -7.05857e-01]],
        [[-3.67777e+00, -1.84364e+00, -3.37029e+00, -2.92029e+00],
         [-2.65358e+00, -4.14801e+00, -3.75090e+00, -3.39416e+00],
         [-1.01743e-01, -1.92489e-01, -6.07441e-02, -9.27161e-02]],
        [[-8.82044e+00, -7.20378e+00, -8.72001e+00, -8.24388e+00],
         [-8.95604e+00, -1.18913e+01, -1.13819e+01, -1.05026e+01],
         [-2.78669e-04, -7.52869e-04, -1.76678e-04, -2.92356e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-9.00039e-01, -1.06915e+00, -9.96749e-01, -6.84438e-01],
         [-4.36852e+00, -6.75413e+00, -7.23676e+00, -6.80842e+00],
         [-5.44874e-01, -4.23587e-01, -4.63023e-01, -7.05857e-01]],
        [[-3.67777e+00, -1.84364e+00, -3.37029e+00, -2.92029e+00],
         [-2.65358e+00, -4.14801e+00, -3.75090e+00, -3.39416e+00],
         [-1.01743e-01, -1.92489e-01, -6.07441e-02, -9.27161e-02]],
        [[-8.82044e+00, -7.20378e+00, -8.72001e+00, -8.24388e+00],
         [-8.95604e+00, -1.18913e+01, -1.13819e+01, -1.05026e+01],
         [-2.78669e-04, -7.52869e-04, -1.76678e-04, -2.92356e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-9.00039e-01, -1.06915e+00, -9.96749e-01, -6.84438e-01],
         [-4.36852e+00, -6.75413e+00, -7.23676e+00, -6.80842e+00],
         [-5.44874e-01, -4.23587e-01, -4.63023e-01, -7.05857e-01]],
        [[-3.67777e+00, -1.84364e+00, -3.37029e+00, -2.92029e+00],
         [-2.65358e+00, -4.14801e+00, -3.75090e+00, -3.39416e+00],
         [-1.01743e-01, -1.92489e-01, -6.07441e-02, -9.27161e-02]],
        [[-8.82044e+00, -7.20378e+00, -8.72001e+00, -8.24388e+00],
         [-8.95604e+00, -1.18913e+01, -1.13819e+01, -1.05026e+01],
         [-2.78669e-04, -7.52869e-04, -1.76678e-04, -2.92356e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
Minimum probs (c1, c2, bkgd): [1.4e-05, 1.6e-05, 0.844238]
Maximum probs (c1, c2, bkgd): [0.069897, 0.104654, 1.0]
ElogPi_volunteer:  tensor([[[-8.95552e-01, -1.09516e+00, -9.83356e-01, -7.94312e-01],
         [-4.80994e+00, -6.40580e+00, -6.83534e+00, -6.43906e+00],
         [-5.40900e-01, -4.11512e-01, -4.72129e-01, -6.06428e-01]],
        [[-4.06680e+00, -1.56291e+00, -3.80120e+00, -3.14620e+00],
         [-2.56481e+00, -4.13070e+00, -3.28052e+00, -2.56791e+00],
         [-9.98952e-02, -2.56957e-01, -6.28913e-02, -1.28645e-01]],
        [[-8.72291e+00, -6.99074e+00, -8.90780e+00, -8.33685e+00],
         [-8.99110e+00, -1.22785e+01, -1.02728e+01, -9.41272e+00],
         [-2.89356e-04, -9.27400e-04, -1.71889e-04, -3.23244e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-8.95552e-01, -1.09516e+00, -9.83356e-01, -7.94312e-01],
         [-4.80994e+00, -6.40580e+00, -6.83534e+00, -6.43906e+00],
         [-5.40900e-01, -4.11512e-01, -4.72129e-01, -6.06428e-01]],
        [[-4.06680e+00, -1.56291e+00, -3.80120e+00, -3.14620e+00],
         [-2.56481e+00, -4.13070e+00, -3.28052e+00, -2.56791e+00],
         [-9.98952e-02, -2.56957e-01, -6.28913e-02, -1.28645e-01]],
        [[-8.72291e+00, -6.99074e+00, -8.90780e+00, -8.33685e+00],
         [-8.99110e+00, -1.22785e+01, -1.02728e+01, -9.41272e+00],
         [-2.89356e-04, -9.27400e-04, -1.71889e-04, -3.23244e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-8.95552e-01, -1.09516e+00, -9.83356e-01, -7.94312e-01],
         [-4.80994e+00, -6.40580e+00, -6.83534e+00, -6.43906e+00],
         [-5.40900e-01, -4.11512e-01, -4.72129e-01, -6.06428e-01]],
        [[-4.06680e+00, -1.56291e+00, -3.80120e+00, -3.14620e+00],
         [-2.56481e+00, -4.13070e+00, -3.28052e+00, -2.56791e+00],
         [-9.98952e-02, -2.56957e-01, -6.28913e-02, -1.28645e-01]],
        [[-8.72291e+00, -6.99074e+00, -8.90780e+00, -8.33685e+00],
         [-8.99110e+00, -1.22785e+01, -1.02728e+01, -9.41272e+00],
         [-2.89356e-04, -9.27400e-04, -1.71889e-04, -3.23244e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-8.95552e-01, -1.09516e+00, -9.83356e-01, -7.94312e-01],
         [-4.80994e+00, -6.40580e+00, -6.83534e+00, -6.43906e+00],
         [-5.40900e-01, -4.11512e-01, -4.72129e-01, -6.06428e-01]],
        [[-4.06680e+00, -1.56291e+00, -3.80120e+00, -3.14620e+00],
         [-2.56481e+00, -4.13070e+00, -3.28052e+00, -2.56791e+00],
         [-9.98952e-02, -2.56957e-01, -6.28913e-02, -1.28645e-01]],
        [[-8.72291e+00, -6.99074e+00, -8.90780e+00, -8.33685e+00],
         [-8.99110e+00, -1.22785e+01, -1.02728e+01, -9.41272e+00],
         [-2.89356e-04, -9.27400e-04, -1.71889e-04, -3.23244e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2/2 [00:01<00:00,  1.33it/s]
               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95:  75%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Œ  | 3/4 [00:01<00:00,  2.34it/s]
               Class     Images     Labels          P          R     mAP@.5 mAP@.5:.95: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 4/4 [00:01<00:00,  2.63it/s]
     Epoch   gpu_mem       box       obj       cls    labels  img_size
YOLO+BCC
  0%|          | 0/4 [00:00<?, ?it/s]
                 all         70        961    0.00286     0.0163    0.00131   0.000262
Minimum probs (c1, c2, bkgd): [4e-06, 8e-06, 0.912598]
Maximum probs (c1, c2, bkgd): [0.05882, 0.054971, 1.0]
ElogPi_volunteer:  tensor([[[-9.24066e-01, -1.28593e+00, -7.36873e-01, -9.26172e-01],
         [-5.62070e+00, -6.31548e+00, -6.14180e+00, -6.15912e+00],
         [-5.16671e-01, -3.30025e-01, -6.61019e-01, -5.12651e-01]],
        [[-4.70051e+00, -1.72306e+00, -3.94177e+00, -3.81321e+00],
         [-2.45409e+00, -3.80811e+00, -2.26194e+00, -2.36919e+00],
         [-1.02391e-01, -2.26920e-01, -1.34522e-01, -1.25494e-01]],
        [[-9.01108e+00, -7.36693e+00, -8.86061e+00, -8.89825e+00],
         [-9.57854e+00, -1.30056e+01, -1.01286e+01, -9.75244e+00],
         [-1.95231e-04, -6.37991e-04, -1.85767e-04, -1.98765e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-9.24066e-01, -1.28593e+00, -7.36873e-01, -9.26172e-01],
         [-5.62070e+00, -6.31548e+00, -6.14180e+00, -6.15912e+00],
         [-5.16671e-01, -3.30025e-01, -6.61019e-01, -5.12651e-01]],
        [[-4.70051e+00, -1.72306e+00, -3.94177e+00, -3.81321e+00],
         [-2.45409e+00, -3.80811e+00, -2.26194e+00, -2.36919e+00],
         [-1.02391e-01, -2.26920e-01, -1.34522e-01, -1.25494e-01]],
        [[-9.01108e+00, -7.36693e+00, -8.86061e+00, -8.89825e+00],
         [-9.57854e+00, -1.30056e+01, -1.01286e+01, -9.75244e+00],
         [-1.95231e-04, -6.37991e-04, -1.85767e-04, -1.98765e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-9.24066e-01, -1.28593e+00, -7.36873e-01, -9.26172e-01],
         [-5.62070e+00, -6.31548e+00, -6.14180e+00, -6.15912e+00],
         [-5.16671e-01, -3.30025e-01, -6.61019e-01, -5.12651e-01]],
        [[-4.70051e+00, -1.72306e+00, -3.94177e+00, -3.81321e+00],
         [-2.45409e+00, -3.80811e+00, -2.26194e+00, -2.36919e+00],
         [-1.02391e-01, -2.26920e-01, -1.34522e-01, -1.25494e-01]],
        [[-9.01108e+00, -7.36693e+00, -8.86061e+00, -8.89825e+00],
         [-9.57854e+00, -1.30056e+01, -1.01286e+01, -9.75244e+00],
         [-1.95231e-04, -6.37991e-04, -1.85767e-04, -1.98765e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
ElogPi_volunteer:  tensor([[[-9.24066e-01, -1.28593e+00, -7.36873e-01, -9.26172e-01],
         [-5.62070e+00, -6.31548e+00, -6.14180e+00, -6.15912e+00],
         [-5.16671e-01, -3.30025e-01, -6.61019e-01, -5.12651e-01]],
        [[-4.70051e+00, -1.72306e+00, -3.94177e+00, -3.81321e+00],
         [-2.45409e+00, -3.80811e+00, -2.26194e+00, -2.36919e+00],
         [-1.02391e-01, -2.26920e-01, -1.34522e-01, -1.25494e-01]],
        [[-9.01108e+00, -7.36693e+00, -8.86061e+00, -8.89825e+00],
         [-9.57854e+00, -1.30056e+01, -1.01286e+01, -9.75244e+00],
         [-1.95231e-04, -6.37991e-04, -1.85767e-04, -1.98765e-04]]], device='cuda:0', dtype=torch.float64)
base_lib:  <module 'torch' from 'C:\\Users\\rb01243\\Anaconda3\\lib\\site-packages\\torch\\__init__.py'>
<class 'torch.Tensor'>
<class 'module'>
torch.Size([3, 3, 4])
YOLOv5  2022-1-18 torch 1.10.1+cu113 CUDA:0 (NVIDIA GeForce RTX 3090, 24575.5MB)
[34m[1mhyperparameters: [39m[22mlr0=0.01, lrf=0.2, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=0.05, obj=1.0, cls=0.5, cls_pw=1.0, obj_pw=1.0, iou_t=0.2, anchor_t=4.0, fl_gamma=0, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.0, copy_paste=0.0
[34m[1mTensorBoard: [39m[22mStart with 'tensorboard --logdir runs\train', view at http://localhost:6006/
Overriding model.yaml nc=80 with nc=2
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     18879  models.yolo.Detect                      [2, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
Model Summary: 270 layers, 7025023 parameters, 7025023 gradients, 15.9 GFLOPs
[34m[1mtrain: [39m[22mbcc_epoch=0, qtfilter_epoch=-1, qt_thres_mode=, qt_thres=0.0, hybrid_entropy_thres=0.0, hybrid_conf_thres=0.0, weights=yolov5s.pt, cfg=, data=../data/cyolo.yaml, hyp=../data/hyps/hyp.scratch.yaml, epochs=80, batch_size=20, imgsz=640, rect=False, resume=False, nosave=False, noval=False, noautoanchor=False, evolve=None, bucket=, cache=None, image_weights=False, device=, multi_scale=False, single_cls=False, adam=False, sync_bn=False, workers=8, project=runs/train, entity=None, name=test, exist_ok=False, quad=False, linear_lr=False, label_smoothing=0.0, upload_dataset=False, bbox_interval=-1, save_period=-1, artifact_alias=latest, local_rank=-1, freeze=0, patience=1100
[34m[1mgithub: [39m[22mskipping check (not a git repository), for updates see https://github.com/ultralytics/yolov5
Transferred 344/350 items from yolov5s.pt
Scaled weight_decay = 0.00046875
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight, 60 weight (no decay), 60 bias

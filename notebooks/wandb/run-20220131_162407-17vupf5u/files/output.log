Overriding model.yaml nc=80 with nc=3
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     21576  models.yolo.Detect                      [3, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
C:\Users\rb01243\Anaconda3\lib\site-packages\torch\functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ..\aten\src\ATen\native\TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Model Summary: 270 layers, 7027720 parameters, 7027720 gradients, 15.9 GFLOPs
Transferred 344/350 items from yolov5s.pt
Scaled weight_decay = 0.00046875
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight, 60 weight (no decay), 60 bias
[34m[1mtrain: [39m[22mScanning '..\data\datasets\All_Volunteers_Crowdsourced\labels\train.cache' images and labels... 2103 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2103/2103 [00:00<?, ?it/s]
[34m[1mval: [39m[22mScanning '..\data\datasets\All_Volunteers_IID\labels\val' images and labels...860 found, 0 missing, 0 empty, 2 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 860/860 [00:04<00:00, 191.41it/s]
[34m[1mval: [39m[22mWARNING: Ignoring corrupted image and/or label ..\data\datasets\All_Volunteers_IID\images\val\Unknown-X-20191113-153036-XKNMQ7OPXKU-3.1f089314ef9273e4647b.JPG: non-normalized or out of bounds coordinate labels
[34m[1mval: [39m[22mWARNING: Ignoring corrupted image and/or label ..\data\datasets\All_Volunteers_IID\images\val\Unknown-X-20191113-153036-XKNMQ7OPXKU-3.9c62fc6bf51ff6f1eafe.JPG: non-normalized or out of bounds coordinate labels
[34m[1mval: [39m[22mWARNING: Cache directory ..\data\datasets\All_Volunteers_IID\labels is not writeable: [WinError 183] Cannot create a file when that file already exists: '..\\data\\datasets\\All_Volunteers_IID\\labels\\val.cache.npy' -> '..\\data\\datasets\\All_Volunteers_IID\\labels\\val.cache'
Plotting labels...
[34m[1mautoanchor: [39m[22mAnalyzing anchors... anchors/target = 5.23, Best Possible Recall (BPR) = 0.9990
Image sizes 640 train, 640 val
Using 8 dataloader workers
Logging results to [1mruns\train\Expset2_all_cyolo62
Starting training for 80 epochs...
     Epoch   gpu_mem       box       obj       cls    labels  img_size
YOLO+BCC
  0%|          | 0/106 [00:00<?, ?it/s]
Minimum probs (c1, c2, bkgd): [5e-06, 2e-06, 4e-06, 0.737305]
Maximum probs (c1, c2, bkgd): [0.161849, 0.074818, 0.090162, 1.0]
imgs:  tensor([[[[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]]],
        [[[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]]],
        [[[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]]],
        ...,
        [[[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]]],
        [[[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]]],
        [[[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]],
         [[0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          ...,
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706],
          [0.44706, 0.44706, 0.44706,  ..., 0.44706, 0.44706, 0.44706]]]], device='cuda:0')
imgsz:  640
batch_pcm:  {'prior': tensor([[[1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64), 'variational': tensor([[[1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64)}
batch_pcm["variational"]:  tensor([[[1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64)
batch_pcm["variational"] size:  torch.Size([3, 3, 505])
batch_pcm["prior"]:  tensor([[[1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64)

  0%|          | 0/106 [00:08<?, ?it/s]
Overriding model.yaml nc=80 with nc=3
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     21576  models.yolo.Detect                      [3, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
C:\Users\rb01243\Anaconda3\lib\site-packages\torch\functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ..\aten\src\ATen\native\TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Model Summary: 270 layers, 7027720 parameters, 7027720 gradients, 15.9 GFLOPs
Transferred 344/350 items from yolov5s.pt
Scaled weight_decay = 0.00046875
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight, 60 weight (no decay), 60 bias


[34m[1mtrain: [39m[22mScanning '..\data\datasets\All_Volunteers_Crowdsourced\labels\train' images and labels...2102 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2102/2102 [00:07<00:00, 267.54it/s]
[34m[1mtrain: [39m[22mWARNING: Cache directory ..\data\datasets\All_Volunteers_Crowdsourced\labels is not writeable: [WinError 183] Cannot create a file when that file already exists: '..\\data\\datasets\\All_Volunteers_Crowdsourced\\labels\\train.cache.npy' -> '..\\data\\datasets\\All_Volunteers_Crowdsourced\\labels\\train.cache'

[34m[1mval: [39m[22mScanning '..\data\datasets\All_Volunteers_IID\labels\val' images and labels...860 found, 0 missing, 0 empty, 2 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 860/860 [00:06<00:00, 138.46it/s]
[34m[1mval: [39m[22mWARNING: Ignoring corrupted image and/or label ..\data\datasets\All_Volunteers_IID\images\val\Unknown-X-20191113-153036-XKNMQ7OPXKU-3.1f089314ef9273e4647b.JPG: non-normalized or out of bounds coordinate labels
[34m[1mval: [39m[22mWARNING: Ignoring corrupted image and/or label ..\data\datasets\All_Volunteers_IID\images\val\Unknown-X-20191113-153036-XKNMQ7OPXKU-3.9c62fc6bf51ff6f1eafe.JPG: non-normalized or out of bounds coordinate labels
[34m[1mval: [39m[22mWARNING: Cache directory ..\data\datasets\All_Volunteers_IID\labels is not writeable: [WinError 183] Cannot create a file when that file already exists: '..\\data\\datasets\\All_Volunteers_IID\\labels\\val.cache.npy' -> '..\\data\\datasets\\All_Volunteers_IID\\labels\\val.cache'
Plotting labels...
[34m[1mautoanchor: [39m[22mAnalyzing anchors... anchors/target = 5.23, Best Possible Recall (BPR) = 0.9989
Image sizes 640 train, 640 val
Using 8 dataloader workers
Logging results to [1mruns\train\LargeDS_cyolo22
Starting training for 10 epochs...
     Epoch   gpu_mem       box       obj       cls    labels  img_size
YOLO+BCC
  0%|          | 0/106 [00:00<?, ?it/s]
target_volunteers_bcc:  tensor([[[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        ...,
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]]])
target_volunteers_bcc size:  torch.Size([20, 25200, 505])
batch_pred_bcc:  tensor([[[-8.47019e+00, -8.38802e+00, -1.08519e+01, -4.88401e-04],
         [-8.37005e+00, -8.13065e+00, -9.88579e+00, -4.88401e-04],
         [-7.92133e+00, -7.97298e+00, -9.18027e+00, -9.77040e-04],
         ...,
         [-5.05219e+00, -4.99346e+00, -4.69776e+00, -2.27170e-02],
         [-4.90328e+00, -4.62558e+00, -4.49531e+00, -2.87291e-02],
         [-4.65428e+00, -4.71939e+00, -4.56324e+00, -2.92317e-02]],
        [[-8.27557e+00, -8.20894e+00, -1.06427e+01, -4.88401e-04],
         [-8.21965e+00, -7.99102e+00, -9.69355e+00, -4.88401e-04],
         [-7.78343e+00, -7.84669e+00, -9.04553e+00, -9.77040e-04],
         ...,
         [-4.88966e+00, -4.69072e+00, -4.52047e+00, -2.77245e-02],
         [-4.81190e+00, -4.49281e+00, -4.46796e+00, -3.12448e-02],
         [-4.60498e+00, -4.62316e+00, -4.52391e+00, -3.12448e-02]],
        [[-8.64349e+00, -8.61928e+00, -1.09695e+01, -4.88401e-04],
         [-8.56806e+00, -8.35389e+00, -1.00394e+01, -4.88401e-04],
         [-8.03657e+00, -8.16059e+00, -9.34876e+00, -4.88401e-04],
         ...,
         [-4.74746e+00, -4.81398e+00, -4.59252e+00, -2.72227e-02],
         [-4.69379e+00, -4.61995e+00, -4.53717e+00, -3.02377e-02],
         [-4.47320e+00, -4.72382e+00, -4.60093e+00, -3.07411e-02]],
        ...,
        [[-8.23452e+00, -8.22088e+00, -1.11730e+01, -4.88401e-04],
         [-8.10444e+00, -7.97775e+00, -1.02669e+01, -4.88401e-04],
         [-7.68383e+00, -7.77134e+00, -9.52818e+00, -9.77040e-04],
         ...,
         [-4.81366e+00, -4.70597e+00, -4.58838e+00, -2.77245e-02],
         [-4.75518e+00, -4.51869e+00, -4.53163e+00, -3.07411e-02],
         [-4.51626e+00, -4.68935e+00, -4.57972e+00, -3.07411e-02]],
        [[-8.57522e+00, -8.53511e+00, -1.11307e+01, -4.88401e-04],
         [-8.47507e+00, -8.26537e+00, -1.01869e+01, -4.88401e-04],
         [-7.86263e+00, -7.89299e+00, -9.30426e+00, -9.77040e-04],
         ...,
         [-4.57904e+00, -4.54480e+00, -4.38699e+00, -3.37669e-02],
         [-4.60454e+00, -4.43164e+00, -4.42764e+00, -3.42720e-02],
         [-4.49017e+00, -4.66679e+00, -4.54419e+00, -3.17487e-02]],
        [[-8.53485e+00, -8.56269e+00, -1.10861e+01, -4.88401e-04],
         [-8.46188e+00, -8.28187e+00, -1.01493e+01, -4.88401e-04],
         [-7.85051e+00, -7.92921e+00, -9.32003e+00, -9.77040e-04],
         ...,
         [-4.89555e+00, -4.82849e+00, -4.51583e+00, -2.67210e-02],
         [-4.78352e+00, -4.59613e+00, -4.42419e+00, -3.07411e-02],
         [-4.53362e+00, -4.73781e+00, -4.46885e+00, -3.12448e-02]]], device='cuda:0', grad_fn=<LogBackward0>)
batch_pred_bcc.size():  torch.Size([20, 25200, 4])
batch_pcm['variational']:  tensor([[[1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64)
batch_pcm['variational'].size():  torch.Size([4, 4, 505])
batch_pcm['prior']:  tensor([[[1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64)
batch_pcm['prior'].size():  torch.Size([4, 4, 505])
batch_qtargets tensor([[[2.38840e-33, 2.59306e-33, 1.00000e+00, 1.13884e-29],
         [1.00461e-33, 1.27631e-33, 1.00000e+00, 4.33364e-30],
         [7.77105e-34, 7.37997e-34, 1.00000e+00, 2.13916e-30],
         ...,
         [1.54796e-34, 1.64158e-34, 1.00000e+00, 2.36612e-32],
         [1.46728e-34, 1.93697e-34, 1.00000e+00, 1.92094e-32],
         [2.01437e-34, 1.88748e-34, 1.00000e+00, 2.05484e-32]],
        [[2.35381e-33, 2.51604e-33, 1.00000e+00, 9.23837e-30],
         [9.63470e-34, 1.21097e-33, 1.00000e+00, 3.57587e-30],
         [7.79528e-34, 7.31762e-34, 1.00000e+00, 1.86946e-30],
         ...,
         [1.52536e-34, 1.86106e-34, 1.00000e+00, 1.97190e-32],
         [1.56430e-34, 2.15229e-34, 1.00000e+00, 1.86434e-32],
         [2.03464e-34, 1.99796e-34, 1.00000e+00, 1.97166e-32]],
        [[2.25908e-33, 2.31449e-33, 1.00000e+00, 1.28098e-29],
         [9.61003e-34, 1.19053e-33, 1.00000e+00, 5.05326e-30],
         [8.19585e-34, 7.23988e-34, 1.00000e+00, 2.53289e-30],
         ...,
         [1.88979e-34, 1.76815e-34, 1.00000e+00, 2.12020e-32],
         [1.88656e-34, 2.03116e-34, 1.00000e+00, 2.00003e-32],
         [2.50708e-34, 1.95132e-34, 1.00000e+00, 2.13071e-32]],
        ...,
        [[4.16779e-33, 4.22490e-33, 1.00000e+00, 1.56997e-29],
         [1.91820e-33, 2.17718e-33, 1.00000e+00, 6.34440e-30],
         [1.39544e-33, 1.27850e-33, 1.00000e+00, 3.02925e-30],
         ...,
         [1.76137e-34, 1.96171e-34, 1.00000e+00, 2.11039e-32],
         [1.76449e-34, 2.23529e-34, 1.00000e+00, 1.98810e-32],
         [2.35102e-34, 1.97734e-34, 1.00000e+00, 2.08593e-32]],
        [[2.84166e-33, 2.95811e-33, 1.00000e+00, 1.50504e-29],
         [1.22218e-33, 1.50736e-33, 1.00000e+00, 5.85616e-30],
         [9.32916e-34, 9.04986e-34, 1.00000e+00, 2.42162e-30],
         ...,
         [1.82094e-34, 1.88438e-34, 1.00000e+00, 1.71510e-32],
         [1.84872e-34, 2.19769e-34, 1.00000e+00, 1.78539e-32],
         [2.32888e-34, 1.95192e-34, 1.00000e+00, 2.01104e-32]],
        [[2.82955e-33, 2.75188e-33, 1.00000e+00, 1.43928e-29],
         [1.19278e-33, 1.42809e-33, 1.00000e+00, 5.64041e-30],
         [9.59245e-34, 8.86670e-34, 1.00000e+00, 2.46006e-30],
         ...,
         [1.50934e-34, 1.61406e-34, 1.00000e+00, 1.96470e-32],
         [1.54042e-34, 1.85788e-34, 1.00000e+00, 1.78549e-32],
         [2.06807e-34, 1.68616e-34, 1.00000e+00, 1.86605e-32]]], device='cuda:0')
batch_lb tensor(-15494478., device='cuda:0', grad_fn=<SumBackward0>)
[34m[1mtrain: [39m[22mbcc_epoch=0, confusion_matrix_diagonal_prior_hyp=0.1, convergence_threshold_hyp=1e-06, qtfilter_epoch=-1, qt_thres_mode=, qt_thres=0.0, hybrid_entropy_thres=0.0, hybrid_conf_thres=0.0, weights=yolov5s.pt, cfg=, data=../data/cyolo.yaml, hyp=../data/hyps/hyp.scratch.yaml, epochs=80, batch_size=20, imgsz=640, rect=False, resume=False, nosave=False, noval=False, noautoanchor=False, evolve=None, bucket=, cache=None, image_weights=False, device=0, multi_scale=False, single_cls=False, adam=False, sync_bn=False, workers=8, project=runs/train, entity=None, name=test, exist_ok=False, quad=False, linear_lr=False, label_smoothing=0.0, upload_dataset=False, bbox_interval=-1, save_period=-1, artifact_alias=latest, local_rank=-1, freeze=0, patience=1100
[34m[1mgithub: [39m[22mskipping check (not a git repository), for updates see https://github.com/ultralytics/yolov5
  0%|          | 0/106 [00:23<?, ?it/s]
YOLOv5  2022-1-18 torch 1.10.1+cu113 CUDA:0 (NVIDIA GeForce RTX 3090, 24575.5MB)
[34m[1mhyperparameters: [39m[22mlr0=0.01, lrf=0.2, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=0.05, obj=1.0, cls=0.5, cls_pw=1.0, obj_pw=1.0, iou_t=0.2, anchor_t=4.0, fl_gamma=0, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.0, copy_paste=0.0
[34m[1mTensorBoard: [39m[22mStart with 'tensorboard --logdir runs\train', view at http://localhost:6006/
Overriding model.yaml nc=80 with nc=2
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     18879  models.yolo.Detect                      [2, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
Model Summary: 270 layers, 7025023 parameters, 7025023 gradients, 15.9 GFLOPs
Transferred 344/350 items from yolov5s.pt
Scaled weight_decay = 0.00046875
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight, 60 weight (no decay), 60 bias
[34m[1mtrain: [39m[22mScanning '..\data\datasets\bcc-tvt\labels\train.cache' images and labels... 70 found, 0 missing, 3 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 70/70 [00:00<?, ?it/s]
[34m[1mval: [39m[22mScanning '..\data\datasets\iid-tvt\labels\val.cache' images and labels... 67 found, 13 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 80/80 [00:00<?, ?it/s]
Plotting labels...
[34m[1mautoanchor: [39m[22mAnalyzing anchors... anchors/target = 6.03, Best Possible Recall (BPR) = 1.0000
target_volunteers_bcc:  tensor([[[2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         ...,
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.]],
        [[2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         ...,
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.]],
        [[2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         ...,
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.]],
        ...,
        [[2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         ...,
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.]],
        [[2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         ...,
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.]],
        [[2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         ...,
         [2., 2., 2., 2.],
         [2., 2., 2., 2.],
         [2., 2., 2., 2.]]])
target_volunteers_bcc size:  torch.Size([20, 25200, 4])
batch_pred_bcc:  tensor([[[-8.59668e+00, -8.68223e+00, -4.88401e-04],
         [-8.44789e+00, -8.39284e+00, -4.88401e-04],
         [-7.86954e+00, -8.14682e+00, -4.88401e-04],
         ...,
         [-5.31091e+00, -5.21565e+00, -1.03068e-02],
         [-5.41939e+00, -5.33087e+00, -9.32065e-03],
         [-5.27354e+00, -5.52163e+00, -9.32065e-03]],
        [[-8.49728e+00, -8.48389e+00, -4.88401e-04],
         [-8.38799e+00, -8.18838e+00, -4.88401e-04],
         [-7.91518e+00, -7.98913e+00, -4.88401e-04],
         ...,
         [-5.40077e+00, -5.23177e+00, -9.81362e-03],
         [-5.45368e+00, -5.28681e+00, -9.32065e-03],
         [-5.35755e+00, -5.55632e+00, -8.82791e-03]],
        [[-8.37446e+00, -8.22955e+00, -4.88401e-04],
         [-8.32274e+00, -7.94466e+00, -4.88401e-04],
         [-7.62656e+00, -7.56034e+00, -9.77040e-04],
         ...,
         [-5.09052e+00, -4.98861e+00, -1.32713e-02],
         [-5.24254e+00, -5.25110e+00, -1.08003e-02],
         [-5.06386e+00, -5.35786e+00, -1.12940e-02]],
        ...,
        [[-8.37696e+00, -8.32379e+00, -4.88401e-04],
         [-8.25306e+00, -8.05814e+00, -4.88401e-04],
         [-7.72210e+00, -7.81663e+00, -9.77040e-04],
         ...,
         [-5.44952e+00, -5.22586e+00, -9.81362e-03],
         [-5.48285e+00, -5.39146e+00, -8.82791e-03],
         [-5.27337e+00, -5.58485e+00, -8.82791e-03]],
        [[-8.32793e+00, -8.09591e+00, -4.88401e-04],
         [-8.26867e+00, -7.81176e+00, -4.88401e-04],
         [-7.75258e+00, -7.64634e+00, -9.77040e-04],
         ...,
         [-5.19449e+00, -5.04898e+00, -1.17880e-02],
         [-5.38698e+00, -5.33898e+00, -9.32065e-03],
         [-5.19127e+00, -5.49455e+00, -9.81362e-03]],
        [[-8.77206e+00, -8.67994e+00, -4.88401e-04],
         [-8.62368e+00, -8.41527e+00, -4.88401e-04],
         [-8.15801e+00, -8.10513e+00, -4.88401e-04],
         ...,
         [-5.24945e+00, -5.06713e+00, -1.17880e-02],
         [-5.36998e+00, -5.30967e+00, -9.81362e-03],
         [-5.15376e+00, -5.44542e+00, -1.03068e-02]]], device='cuda:0', grad_fn=<LogBackward0>)
batch_pred_bcc.size():  torch.Size([20, 25200, 3])
batch_pcm['variational']:  tensor([[[1.10000, 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64)
batch_pcm['variational'].size():  torch.Size([3, 3, 4])
batch_pcm['prior']:  tensor([[[1.10000, 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64)
batch_pcm['prior'].size():  torch.Size([3, 3, 4])
batch_qtargets tensor([[[1.00012e-04, 9.18109e-05, 9.99808e-01],
         [1.16051e-04, 1.22619e-04, 9.99761e-01],
         [2.06903e-04, 1.56800e-04, 9.99636e-01],
         ...,
         [2.68494e-03, 2.95327e-03, 9.94362e-01],
         [2.40799e-03, 2.63087e-03, 9.94961e-01],
         [2.78632e-03, 2.17413e-03, 9.95040e-01]],
        [[1.10460e-04, 1.11949e-04, 9.99778e-01],
         [1.23210e-04, 1.50430e-04, 9.99726e-01],
         [1.97670e-04, 1.83579e-04, 9.99619e-01],
         ...,
         [2.45366e-03, 2.90545e-03, 9.94641e-01],
         [2.32673e-03, 2.74926e-03, 9.94924e-01],
         [2.56132e-03, 2.09961e-03, 9.95339e-01]],
        [[1.24890e-04, 1.44363e-04, 9.99731e-01],
         [1.31511e-04, 1.91937e-04, 9.99676e-01],
         [2.63893e-04, 2.81957e-04, 9.99454e-01],
         ...,
         [3.35207e-03, 3.71169e-03, 9.92936e-01],
         [2.87610e-03, 2.85156e-03, 9.94272e-01],
         [3.43951e-03, 2.56337e-03, 9.93997e-01]],
        ...,
        [[1.24579e-04, 1.31383e-04, 9.99744e-01],
         [1.41003e-04, 1.71348e-04, 9.99688e-01],
         [2.39868e-04, 2.18232e-04, 9.99542e-01],
         ...,
         [2.33715e-03, 2.92293e-03, 9.94740e-01],
         [2.25949e-03, 2.47573e-03, 9.95265e-01],
         [2.78579e-03, 2.04021e-03, 9.95174e-01]],
        [[1.30834e-04, 1.65001e-04, 9.99704e-01],
         [1.38814e-04, 2.19212e-04, 9.99642e-01],
         [2.32659e-04, 2.58736e-04, 9.99509e-01],
         ...,
         [3.01825e-03, 3.49100e-03, 9.93491e-01],
         [2.48716e-03, 2.60946e-03, 9.94903e-01],
         [3.02583e-03, 2.23425e-03, 9.94740e-01]],
        [[8.39244e-05, 9.20231e-05, 9.99824e-01],
         [9.73452e-05, 1.19902e-04, 9.99783e-01],
         [1.55062e-04, 1.63483e-04, 9.99681e-01],
         ...,
         [2.85750e-03, 3.42899e-03, 9.93714e-01],
         [2.53074e-03, 2.68808e-03, 9.94781e-01],
         [3.14231e-03, 2.34737e-03, 9.94510e-01]]], device='cuda:0')
batch_lb tensor(-159192.50000, device='cuda:0', grad_fn=<SumBackward0>)
Image sizes 640 train, 640 val
Using 8 dataloader workers
Logging results to [1mruns\train\test12
Starting training for 80 epochs...
     Epoch   gpu_mem       box       obj       cls    labels  img_size
YOLO+BCC
  0%|          | 0/4 [00:00<?, ?it/s]
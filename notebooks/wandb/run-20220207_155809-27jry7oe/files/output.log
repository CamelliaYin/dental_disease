Overriding model.yaml nc=80 with nc=3
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     21576  models.yolo.Detect                      [3, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
C:\Users\rb01243\Anaconda3\lib\site-packages\torch\functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ..\aten\src\ATen\native\TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Model Summary: 270 layers, 7027720 parameters, 7027720 gradients, 15.9 GFLOPs
Transferred 344/350 items from yolov5s.pt
Scaled weight_decay = 0.00046875
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight, 60 weight (no decay), 60 bias


[34m[1mtrain: [39m[22mScanning '..\data\datasets\All_Volunteers_Crowdsourced\labels\train' images and labels...2102 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 2102/2102 [00:05<00:00, 380.08it/s]
[34m[1mtrain: [39m[22mWARNING: Cache directory ..\data\datasets\All_Volunteers_Crowdsourced\labels is not writeable: [WinError 183] Cannot create a file when that file already exists: '..\\data\\datasets\\All_Volunteers_Crowdsourced\\labels\\train.cache.npy' -> '..\\data\\datasets\\All_Volunteers_Crowdsourced\\labels\\train.cache'

[34m[1mval: [39m[22mScanning '..\data\datasets\All_Volunteers_IID\labels\val' images and labels...860 found, 0 missing, 0 empty, 2 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 860/860 [00:04<00:00, 192.05it/s]
[34m[1mval: [39m[22mWARNING: Ignoring corrupted image and/or label ..\data\datasets\All_Volunteers_IID\images\val\Unknown-X-20191113-153036-XKNMQ7OPXKU-3.1f089314ef9273e4647b.JPG: non-normalized or out of bounds coordinate labels
[34m[1mval: [39m[22mWARNING: Ignoring corrupted image and/or label ..\data\datasets\All_Volunteers_IID\images\val\Unknown-X-20191113-153036-XKNMQ7OPXKU-3.9c62fc6bf51ff6f1eafe.JPG: non-normalized or out of bounds coordinate labels
[34m[1mval: [39m[22mWARNING: Cache directory ..\data\datasets\All_Volunteers_IID\labels is not writeable: [WinError 183] Cannot create a file when that file already exists: '..\\data\\datasets\\All_Volunteers_IID\\labels\\val.cache.npy' -> '..\\data\\datasets\\All_Volunteers_IID\\labels\\val.cache'
Plotting labels...
[34m[1mautoanchor: [39m[22mAnalyzing anchors... anchors/target = 5.23, Best Possible Recall (BPR) = 0.9988
compute_param_confusion_matrices:  <function compute_param_confusion_matrices at 0x0000018092E700D0>
batch_pcm:  {'prior': tensor([[[1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64), 'variational': tensor([[[1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64)}
Image sizes 640 train, 640 val
Using 8 dataloader workers
Logging results to [1mruns\train\LargeDS_cyolo18
Starting training for 10 epochs...
     Epoch   gpu_mem       box       obj       cls    labels  img_size
YOLO+BCC
  0%|          | 0/106 [00:00<?, ?it/s]
target_volunteers_bcc:  tensor([[[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        ...,
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]],
        [[2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         ...,
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.],
         [2., 2., 2.,  ..., 2., 2., 2.]]])
target_volunteers_bcc size:  torch.Size([20, 25200, 505])
batch_pred_bcc:  tensor([[[-8.27148e+00, -8.20599e+00, -1.06402e+01, -4.88401e-04],
         [-8.21893e+00, -7.99106e+00, -9.69647e+00, -4.88401e-04],
         [-7.77747e+00, -7.84523e+00, -9.04320e+00, -9.77040e-04],
         ...,
         [-4.88937e+00, -4.69043e+00, -4.52092e+00, -2.77245e-02],
         [-4.81082e+00, -4.49281e+00, -4.46873e+00, -3.12448e-02],
         [-4.60360e+00, -4.62333e+00, -4.52502e+00, -3.12448e-02]],
        [[-8.47383e+00, -8.39232e+00, -1.08607e+01, -4.88401e-04],
         [-8.37036e+00, -8.12935e+00, -9.89195e+00, -4.88401e-04],
         [-7.92138e+00, -7.97196e+00, -9.18350e+00, -9.77040e-04],
         ...,
         [-5.05066e+00, -4.99382e+00, -4.69857e+00, -2.27170e-02],
         [-4.89989e+00, -4.62355e+00, -4.49389e+00, -2.87291e-02],
         [-4.65394e+00, -4.72063e+00, -4.56249e+00, -2.92317e-02]],
        [[-8.17707e+00, -8.06632e+00, -1.07434e+01, -4.88401e-04],
         [-8.14649e+00, -7.80556e+00, -9.80393e+00, -9.77040e-04],
         [-7.52267e+00, -7.54785e+00, -8.95623e+00, -9.77040e-04],
         ...,
         [-4.88485e+00, -4.92220e+00, -4.58125e+00, -2.52177e-02],
         [-4.76775e+00, -4.51748e+00, -4.37673e+00, -3.27573e-02],
         [-4.52909e+00, -4.68789e+00, -4.40387e+00, -3.27573e-02]],
        ...,
        [[-8.37765e+00, -8.47442e+00, -1.06745e+01, -4.88401e-04],
         [-8.30770e+00, -8.24680e+00, -9.76725e+00, -4.88401e-04],
         [-7.88707e+00, -8.12866e+00, -9.18179e+00, -9.77040e-04],
         ...,
         [-4.80968e+00, -4.99116e+00, -4.71985e+00, -2.42167e-02],
         [-4.66614e+00, -4.71551e+00, -4.56605e+00, -2.92317e-02],
         [-4.45093e+00, -4.84229e+00, -4.60674e+00, -2.97346e-02]],
        [[-8.53833e+00, -8.56743e+00, -1.10915e+01, -4.88401e-04],
         [-8.46608e+00, -8.28657e+00, -1.01573e+01, -4.88401e-04],
         [-7.85033e+00, -7.92903e+00, -9.32155e+00, -9.77040e-04],
         ...,
         [-4.89248e+00, -4.82782e+00, -4.51423e+00, -2.67210e-02],
         [-4.77963e+00, -4.59535e+00, -4.42247e+00, -3.07411e-02],
         [-4.53163e+00, -4.73934e+00, -4.46955e+00, -3.12448e-02]],
        [[-8.57474e+00, -8.53526e+00, -1.11349e+01, -4.88401e-04],
         [-8.47542e+00, -8.26416e+00, -1.01933e+01, -4.88401e-04],
         [-7.85844e+00, -7.88826e+00, -9.30477e+00, -9.77040e-04],
         ...,
         [-4.57876e+00, -4.54452e+00, -4.38746e+00, -3.37669e-02],
         [-4.60426e+00, -4.43136e+00, -4.42815e+00, -3.42720e-02],
         [-4.48739e+00, -4.66456e+00, -4.54335e+00, -3.17487e-02]]], device='cuda:0', grad_fn=<LogBackward0>)
batch_pred_bcc.size():  torch.Size([20, 25200, 4])
batch_pcm['variational']:  tensor([[[1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64)
batch_pcm['variational'].size():  torch.Size([4, 4, 505])
batch_pcm['prior']:  tensor([[[1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000]],
        [[1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.00000, 1.00000, 1.00000,  ..., 1.00000, 1.00000, 1.00000],
         [1.10000, 1.10000, 1.10000,  ..., 1.10000, 1.10000, 1.10000]]], device='cuda:0', dtype=torch.float64)
batch_pcm['prior'].size():  torch.Size([4, 4, 505])
batch_qtargets tensor([[[2.35755e-33, 2.51711e-33, 1.00000e+00, 9.21528e-30],
         [9.66946e-34, 1.21438e-33, 1.00000e+00, 3.58614e-30],
         [7.82388e-34, 7.31137e-34, 1.00000e+00, 1.86513e-30],
         ...,
         [1.52648e-34, 1.86242e-34, 1.00000e+00, 1.97275e-32],
         [1.56726e-34, 2.15400e-34, 1.00000e+00, 1.86582e-32],
         [2.03974e-34, 1.99979e-34, 1.00000e+00, 1.97383e-32]],
        [[2.40068e-33, 2.60448e-33, 1.00000e+00, 1.14882e-29],
         [1.01057e-33, 1.28601e-33, 1.00000e+00, 4.36070e-30],
         [7.79575e-34, 7.41112e-34, 1.00000e+00, 2.14609e-30],
         ...,
         [1.55165e-34, 1.64238e-34, 1.00000e+00, 2.36814e-32],
         [1.47015e-34, 1.93815e-34, 1.00000e+00, 1.91825e-32],
         [2.01363e-34, 1.88369e-34, 1.00000e+00, 2.05334e-32]],
        [[2.87253e-33, 3.20885e-33, 1.00000e+00, 1.02166e-29],
         [1.15757e-33, 1.62785e-33, 1.00000e+00, 3.99112e-30],
         [9.25317e-34, 9.02338e-34, 1.00000e+00, 1.70976e-30],
         ...,
         [1.62880e-34, 1.56908e-34, 1.00000e+00, 2.10075e-32],
         [1.49239e-34, 1.91686e-34, 1.00000e+00, 1.69937e-32],
         [1.94680e-34, 1.66093e-34, 1.00000e+00, 1.74605e-32]],
        ...,
        [[2.19413e-33, 1.99169e-33, 1.00000e+00, 9.53687e-30],
         [9.49749e-34, 1.00934e-33, 1.00000e+00, 3.84925e-30],
         [8.05403e-34, 6.32554e-34, 1.00000e+00, 2.14243e-30],
         ...,
         [2.01683e-34, 1.68215e-34, 1.00000e+00, 2.41544e-32],
         [1.99626e-34, 1.90008e-34, 1.00000e+00, 2.06062e-32],
         [2.57847e-34, 1.74340e-34, 1.00000e+00, 2.14519e-32]],
        [[2.83508e-33, 2.75373e-33, 1.00000e+00, 1.44712e-29],
         [1.19745e-33, 1.43290e-33, 1.00000e+00, 5.68604e-30],
         [9.60886e-34, 8.88186e-34, 1.00000e+00, 2.46381e-30],
         ...,
         [1.51155e-34, 1.61248e-34, 1.00000e+00, 1.96146e-32],
         [1.54381e-34, 1.85618e-34, 1.00000e+00, 1.78245e-32],
         [2.07363e-34, 1.68472e-34, 1.00000e+00, 1.86730e-32]],
        [[2.85505e-33, 2.97005e-33, 1.00000e+00, 1.51139e-29],
         [1.22967e-33, 1.51890e-33, 1.00000e+00, 5.89381e-30],
         [9.37253e-34, 9.09749e-34, 1.00000e+00, 2.42280e-30],
         ...,
         [1.82228e-34, 1.88576e-34, 1.00000e+00, 1.71584e-32],
         [1.85019e-34, 2.19943e-34, 1.00000e+00, 1.78626e-32],
         [2.33358e-34, 1.95466e-34, 1.00000e+00, 2.00945e-32]]], device='cuda:0')

  0%|          | 0/106 [00:23<?, ?it/s]
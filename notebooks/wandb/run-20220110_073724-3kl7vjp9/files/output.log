Overriding model.yaml nc=80 with nc=2
                 from  n    params  module                                  arguments
  0                -1  1      3520  models.common.Conv                      [3, 32, 6, 2, 2]
  1                -1  1     18560  models.common.Conv                      [32, 64, 3, 2]
  2                -1  1     18816  models.common.C3                        [64, 64, 1]
  3                -1  1     73984  models.common.Conv                      [64, 128, 3, 2]
  4                -1  2    115712  models.common.C3                        [128, 128, 2]
  5                -1  1    295424  models.common.Conv                      [128, 256, 3, 2]
  6                -1  3    625152  models.common.C3                        [256, 256, 3]
  7                -1  1   1180672  models.common.Conv                      [256, 512, 3, 2]
  8                -1  1   1182720  models.common.C3                        [512, 512, 1]
  9                -1  1    656896  models.common.SPPF                      [512, 512, 5]
 10                -1  1    131584  models.common.Conv                      [512, 256, 1, 1]
 11                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 12           [-1, 6]  1         0  models.common.Concat                    [1]
 13                -1  1    361984  models.common.C3                        [512, 256, 1, False]
 14                -1  1     33024  models.common.Conv                      [256, 128, 1, 1]
 15                -1  1         0  torch.nn.modules.upsampling.Upsample    [None, 2, 'nearest']
 16           [-1, 4]  1         0  models.common.Concat                    [1]
 17                -1  1     90880  models.common.C3                        [256, 128, 1, False]
 18                -1  1    147712  models.common.Conv                      [128, 128, 3, 2]
 19          [-1, 14]  1         0  models.common.Concat                    [1]
 20                -1  1    296448  models.common.C3                        [256, 256, 1, False]
 21                -1  1    590336  models.common.Conv                      [256, 256, 3, 2]
 22          [-1, 10]  1         0  models.common.Concat                    [1]
 23                -1  1   1182720  models.common.C3                        [512, 512, 1, False]
 24      [17, 20, 23]  1     18879  models.yolo.Detect                      [2, [[10, 13, 16, 30, 33, 23], [30, 61, 62, 45, 59, 119], [116, 90, 156, 198, 373, 326]], [128, 256, 512]]
Model Summary: 270 layers, 7025023 parameters, 7025023 gradients, 15.9 GFLOPs
Transferred 344/350 items from yolov5s.pt
Scaled weight_decay = 0.00046875
[34m[1moptimizer:[39m[22m SGD with parameter groups 57 weight, 60 weight (no decay), 60 bias
[34m[1mtrain: [39m[22mScanning '../data/datasets/single_toy_bcc-tvt/labels/train' images and la
[34m[1mtrain: [39m[22mNew cache created: ../data/datasets/single_toy_bcc-tvt/labels/train.cache
[34m[1mval: [39m[22mScanning '../data/datasets/single_toy_iid-tvt/labels/val' images and labels
Plotting labels...
[34m[1mval: [39m[22mNew cache created: ../data/datasets/single_toy_iid-tvt/labels/val.cache
[34m[1mautoanchor: [39m[22mAnalyzing anchors... anchors/target = 6.10, Best Possible Recall (BPR) = 1.0000
Image sizes 640 train, 640 val
Using 7 dataloader workers
Logging results to [1mruns/train/exp100
Starting training for 1 epochs...
     Epoch   gpu_mem       box       obj       cls    labels  img_size
YOLO+BCC
  0%|                                                     | 0/1 [00:00<?, ?it/s]
Minimum probs (c1, c2, bkgd): [1e-05, 1.3e-05, 0.914613]

       0/0        0G         0   0.02274         0        21       640: 100%|â–ˆ|
               Class     Images     Labels          P          R     mAP@.5 mAP@
                 all          2          0          0          0          0          0
               Class     Images     Labels          P          R     mAP@.5 mAP@
                 all          7         21    0.00708     0.0294   0.000646   0.000258
           bone-loss          7         17     0.0142     0.0588    0.00129   0.000517
       dental-caries          7          4          0          0          0          0
1 epochs completed in 0.008 hours.
Fusing layers...
Model Summary: 213 layers, 7015519 parameters, 0 gradients, 15.8 GFLOPs
               Class     Images     Labels          P          R     mAP@.5 mAP@
Traceback (most recent call last):
  File "../src/train.py", line 716, in <module>
    main(opt)
  File "../src/train.py", line 614, in main
    train(opt.hyp, opt, device)
  File "../src/train.py", line 508, in train
    results, _, _ = val.run(data_dict,
  File "/Users/gs0029/opt/anaconda3/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 28, in decorate_context
    return func(*args, **kwargs)
  File "/Users/gs0029/repos/dental_disease/src/val.py", line 177, in run
    out, train_out = model(img, augment=augment)  # inference and training outputs
  File "/Users/gs0029/opt/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/gs0029/repos/dental_disease/src/models/yolo.py", line 123, in forward
    return self.forward_once(x, profile, visualize)  # single-scale inference, train
  File "/Users/gs0029/repos/dental_disease/src/models/yolo.py", line 155, in forward_once
    x = m(x)  # run
  File "/Users/gs0029/opt/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/gs0029/repos/dental_disease/src/models/common.py", line 48, in forward_fuse
    return self.act(self.conv(x))
  File "/Users/gs0029/opt/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/gs0029/opt/anaconda3/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 443, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/Users/gs0029/opt/anaconda3/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 439, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.HalfTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor